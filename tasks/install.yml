---

- name: ({{ ansible_distribution }}) Install GIT From Source Tasks Block
  block:

   - name: ({{ ansible_distribution }}) Enable EPEL Releases
     yum:
      name: epel-release
      state: present
     when:
      - ansible_os_family == "RedHat"

   - name: ({{ ansible_distribution }}) Ensure require dependencies are installed ({{ git_required_packages }})
     package:
      name: "{{ git_required_packages }}"
      state: present

   - name: ({{ ansible_distribution }}) Create simlink for docbook2x-texi on RedHat based OS
     file:
      src: "/usr/bin/db2x_docbook2texi"
      dest: "/usr/bin/docbook2x-texi"
      state: link
     when:
      - ansible_os_family == "RedHat"

   - name: ({{ ansible_distribution }}) Create GIT Expand directory ({{ git_tmp_expand_dir }})
     file:
      path: "{{ git_tmp_expand_dir }}"
      state: directory

   - name: ({{ ansible_distribution }}) Uncompress Git archives to {{ git_tmp_expand_dir }}
     unarchive:
      src: "{{ git_downloaded_file }}"
      dest: "{{ git_tmp_expand_dir }}"
      creates: "{{ git_tmp_expand_dir }}/README"
      remote_src: true
      extra_opts:
       - --strip-components=1

   - name: ({{ ansible_distribution }}) Ensure that installed dir exists ({{ git_install_dir }})
     file:
      path: "{{ git_install_dir }}"
      state: directory

   - name: ({{ ansible_distribution }}) Build Git to installed ({{ git_install_dir }}) - ({{ git_build_packages }})
     make:
      target: "{{ item }}"
      chdir: "{{ git_tmp_expand_dir }}"
      params:
       prefix: "{{ git_install_dir }}"
     with_items: "{{ git_build_packages }}"
     changed_when: false
     failed_when: false
     check_mode: false

  when:
   - from_source|bool
   - git_process_install|bool

- name: ({{ ansible_distribution }}) Install GIT From Repository Tasks Block
  block:

   - name: ({{ ansible_distribution }}) Install GIT with additional packages ({{ git_packages }})
     package:
      name: "{{ git_packages }}"
      state: present
      enablerepo: "{{ git_additionnal_repos }}"
     when:
      - ansible_os_family == "RedHat"

   - name: ({{ ansible_distribution }}) Update APT Cache
     apt:
      update_cache: true
      cache_valid_time: 86400
     when:
      - ansible_os_family == "Debian"

   - name: ({{ ansible_distribution }}) Install GIT with addirional packages ({{ git_packages }})
     apt:
      name: "{{ git_packages }}"
      state: present
     when:
      - ansible_os_family == "Debian"

  when:
   - not from_source|bool
